specVersion: 0.0.2
description: Iron Bank is a decentralized protocol to protocol lending platform.
repository: https://github.com/ibdotxyz/ib-subgraph
schema:
  file: ./schema.graphql
dataSources:
  - kind: ethereum/contract
    name: Comptroller
    network: optimism
    source:
      address: "0xE0B57FEEd45e7D908f2d0DaCd26F113Cf26715BF"
      abi: Comptroller
      startBlock: 12658427
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.5
      language: wasm/assemblyscript
      entities:
        - Comptroller
        - Market
        - CreditLimit
      abis:
        - name: Comptroller
          file: ./abis/Comptroller.json
        - name: CCollateralCapErc20
          file: ./abis/CCollateralCapErc20.json
        - name: ERC20
          file: ./abis/ERC20.json
      eventHandlers:
        - event: NewAdmin(address,address)
          handler: handleNewAdmin
        - event: NewImplementation(address,address)
          handler: handleNewImplementation
        - event: NewCloseFactor(uint256,uint256)
          handler: handleNewCloseFactor
        - event: NewLiquidationIncentive(uint256,uint256)
          handler: handleNewLiquidationIncentive
        - event: NewPriceOracle(address,address)
          handler: handleNewPriceOracle
        - event: NewPauseGuardian(address,address)
          handler: handleNewPauseGuardian
        - event: NewLiquidityMining(address,address)
          handler: handleNewLiquidityMining
        - event: ActionPaused(string,bool)
          handler: handleGlobalActionPaused
        - event: ActionPaused(address,string,bool)
          handler: handleCTokenActionPaused
        - event: MarketListed(address)
          handler: handleMarketListed
        - event: MarketDelisted(address,bool)
          handler: handleMarketDelisted
        - event: MarketEntered(address,address)
          handler: handleMarketEntered
        - event: MarketExited(address,address)
          handler: handleMarketExited
        - event: NewCollateralFactor(address,uint256,uint256)
          handler: handleNewCollateralFactor
        - event: NewBorrowCap(indexed address,uint256)
          handler: handleNewBorrowCap
        - event: NewSupplyCap(indexed address,uint256)
          handler: handleNewSupplyCap
        - event: CreditLimitChanged(address,address,uint256)
          handler: handleCreditLimitChanged
      file: ./src/mappings/comptroller.ts
  - kind: ethereum/contract
    name: StakingRewardsFactory
    network: optimism
    source:
      address: "0x35F70CE60f049A8c21721C53a1dFCcB5bF4a1Ea8"
      abi: StakingRewardsFactory
      startBlock: 12661952
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.5
      language: wasm/assemblyscript
      entities:
        - StakingRewardsFactory
        - StakingRewards
      abis:
        - name: StakingRewardsFactory
          file: ./abis/StakingRewardsFactory.json
        - name: StakingRewards
          file: ./abis/StakingRewards.json
      eventHandlers:
        - event: StakingRewardsCreated(indexed address,indexed address)
          handler: handleStakingRewardsCreated
      file: ./src/mappings/stakingRewardsFactory.ts
templates:
  - name: CToken
    kind: ethereum/contract
    network: optimism
    source:
      abi: CCollateralCapErc20
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.5
      language: wasm/assemblyscript
      entities:
        - Account
        - Market
        - CreditLimit
      abis:
        - name: CCollateralCapErc20
          file: ./abis/CCollateralCapErc20.json
        - name: ERC20
          file: ./abis/ERC20.json
      eventHandlers:
        - event: AccrueInterest(uint256,uint256,uint256,uint256)
          handler: handleAccrueInterest
        - event: Mint(address,uint256,uint256)
          handler: handleMint
        - event: Redeem(address,uint256,uint256)
          handler: handleRedeem
        - event: Borrow(address,uint256,uint256,uint256)
          handler: handleBorrow
        - event: RepayBorrow(address,address,uint256,uint256,uint256)
          handler: handleRepayBorrow
        - event: LiquidateBorrow(address,address,uint256,address,uint256)
          handler: handleLiquidateBorrow
        - event: Transfer(indexed address,indexed address,uint256)
          handler: handleTransfer
        - event: Flashloan(indexed address,uint256,uint256,uint256)
          handler: handleFlashloan
        - event: UserCollateralChanged(address,uint256)
          handler: handleUserCollateralChanged
        - event: NewReserveFactor(uint256,uint256)
          handler: handleNewReserveFactor
        - event: NewMarketInterestRateModel(address,address)
          handler: handleNewMarketInterestRateModel
        - event: NewImplementation(address,address)
          handler: handleNewImplementation
        - event: NewCollateralCap(address,uint256)
          handler: handleNewCollateralCap
        - event: NewTokenName(string,string)
          handler: handleNewTokenName
        - event: NewTokenSymbol(string,string)
          handler: handleNewTokenSymbol
      file: ./src/mappings/ctoken.ts
  - name: StakingRewards
    kind: ethereum/contract
    network: optimism
    source:
      abi: StakingRewards
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.5
      language: wasm/assemblyscript
      entities:
        - StakingRewards
        - StakingRewardsAccountAction
        - Account
      abis:
        - name: StakingRewards
          file: ./abis/StakingRewards.json
        - name: ERC20
          file: ./abis/ERC20.json
      eventHandlers:
        - event: Staked(indexed address,uint256)
          handler: handleStaked
        - event: Withdrawn(indexed address,uint256)
          handler: handleWithdrawal
        - event: RewardPaid(indexed address,address,uint256)
          handler: handleRewardsPaid
      file: ./src/mappings/stakingRewards.ts
